// Code generated by counterfeiter. DO NOT EDIT.
package k8sfakes

import (
	"github.com/go-logr/logr"
	"github.com/jivvon/node-label-controller/internal/external/k8s"
	"sigs.k8s.io/controller-runtime/pkg/builder"
	"sigs.k8s.io/controller-runtime/pkg/client"
	"sigs.k8s.io/controller-runtime/pkg/controller"
	"sigs.k8s.io/controller-runtime/pkg/handler"
	"sigs.k8s.io/controller-runtime/pkg/predicate"
	"sigs.k8s.io/controller-runtime/pkg/reconcile"
)

type FakeBuilder struct {
	ForStub      func(client.Object, ...builder.ForOption) k8s.Builder
	CompleteStub func(reconcile.Reconciler) error
}

var _ k8s.Builder = &FakeBuilder{}

func (f *FakeBuilder) For(obj client.Object, opts ...builder.ForOption) k8s.Builder {
	if f.ForStub != nil {
		return f.ForStub(obj, opts...)
	}
	return f
}

func (f *FakeBuilder) Complete(r reconcile.Reconciler) error {
	if f.CompleteStub != nil {
		return f.CompleteStub(r)
	}
	return nil
}

func (f *FakeBuilder) Owns(obj client.Object, opts ...builder.OwnsOption) k8s.Builder { return f }

func (f *FakeBuilder) Watches(obj client.Object, h handler.EventHandler, opts ...builder.WatchesOption) k8s.Builder {
	return f
}

func (f *FakeBuilder) WithEventFilter(p predicate.Predicate) k8s.Builder { return f }

func (f *FakeBuilder) WithOptions(options controller.Options) k8s.Builder { return f }

func (f *FakeBuilder) WithLogConstructor(logConstructor func(*reconcile.Request) logr.Logger) k8s.Builder {
	return f
}

func (f *FakeBuilder) Named(name string) k8s.Builder { return f }

func (f *FakeBuilder) Build(r reconcile.Reconciler) (controller.Controller, error) { return nil, nil }
